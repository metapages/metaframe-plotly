{"version":3,"file":"index.aa3ecd3a.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/components/Plotly.tsx","../../src/components/ButtonHelp.tsx","../../src/routes/home.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/repo/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import { FunctionalComponent } from \"preact\";\nimport { useEffect, useState } from \"preact/hooks\";\nimport { useMetaframe } from \"@metapages/metaframe-hook\";\nimport { MetaframeInputMap } from \"@metapages/metapage\";\nimport Plot from \"react-plotly.js\";\n\nexport const Plotly: FunctionalComponent = () => {\n  // This is currently the most performant way to get metaframe\n  // inputs and cleanup properly\n  const metaframeObject = useMetaframe();\n  const [data, setData] = useState<any[]>([]);\n  const [config, setConfig] = useState<any>({});\n  const [layout, setLayout] = useState<any>({});\n\n  useEffect(() => {\n    if (metaframeObject.metaframe) {\n      console.log('new metaframe object');\n    }\n  }, [metaframeObject.metaframe]);\n\n  // listen to inputs and cleanup up listener\n  useEffect(() => {\n    if (!metaframeObject?.metaframe) {\n      return;\n    }\n    const metaframe = metaframeObject.metaframe;\n    const onInputs = (newinputs: MetaframeInputMap): void => {\n\n      // Notify others inputs are recieved for performance\n      metaframe.setOutputs({\n        event: { id: newinputs.id, name: \"inputs\", time: performance.now() },\n      });\n      setData(newinputs.data || null);\n      setConfig(newinputs.config || null);\n      setLayout(newinputs.layout || null);\n    };\n    const disposer = metaframe.onInputs(onInputs);\n\n    return () => {\n      // If the metaframe is cleaned up, also remove the inputs listener\n      disposer();\n    };\n  }, [metaframeObject.metaframe, setData, setConfig, setLayout]);\n\n  return (\n    <Plot\n      style={{ width: \"100%\", height: \"100%\" }}\n      data={data}\n      layout={{ ...{ autosize: true }, ...layout }}\n      config={{ ...{ responsive: true }, ...config }}\n      useResizeHandler={true}\n    />\n  );\n};\n","import { FunctionalComponent } from \"preact\";\nimport { useCallback, useState } from \"preact/hooks\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n  IconButton,\n  DrawerCloseButton,\n} from \"@chakra-ui/react\";\nimport { isIframe } from \"@metapages/metaframe-hook\";\nimport { QuestionIcon } from \"@chakra-ui/icons\";\n\nexport const ButtonHelp: FunctionalComponent<{ url?: string }> = ({ url }) => {\n  const [open, setOpen] = useState<boolean>(isIframe() ? false : true);\n\n  url = url\n    ? url\n    : `${window.location.origin}${window.location.pathname}/README.md`;\n\n  const onClick = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <>\n      <IconButton\n        verticalAlign=\"top\"\n        aria-label=\"Help\"\n        // @ts-ignore\n        icon={<QuestionIcon />}\n        size=\"md\"\n        onClick={onClick}\n        mr=\"4\"\n      />\n      <HelpPanel url={url} isOpen={open} setOpen={setOpen} />\n    </>\n  );\n};\n\nconst HelpPanel: FunctionalComponent<{\n  url: string;\n  isOpen: boolean;\n  setOpen: (open: boolean) => void;\n}> = ({ isOpen, setOpen, url }) => {\n  const onClose = useCallback(() => {\n    setOpen(!isOpen);\n  }, [setOpen, isOpen]);\n\n  const onOverlayClick = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const iframeUrl = `https://metapages.github.io/metaframe-markdown/#?url=${url}`;\n\n  return (\n    <Drawer\n      size=\"full\"\n      placement=\"top\"\n      onClose={onClose}\n      isOpen={isOpen}\n      onOverlayClick={onOverlayClick}\n    >\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerCloseButton size=\"lg\" bg=\"gray.100\" />\n          <DrawerBody>\n            <iframe width=\"100%\" height=\"100%\" src={iframeUrl} />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n};\n","import { FunctionalComponent } from \"preact\";\nimport { Plotly } from '/@/components/Plotly';\nimport { ButtonHelp } from '/@/components/ButtonHelp';\nimport { isIframe } from \"@metapages/metapage\";\n\nexport const Route: FunctionalComponent = () => (\n  <>\n    {isIframe() ? null : <ButtonHelp />}\n    <Plotly />\n  </>\n);\n","import { FunctionalComponent } from \"preact\";\nimport { Route as Home } from \"./routes/home\";\n\nexport const App: FunctionalComponent = () => {\n  return <Home />;\n};\n","import { render } from \"preact\";\nimport { WithMetaframe } from \"@metapages/metaframe-hook\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { App } from \"./App\";\n\nrender(\n  <ChakraProvider>\n    <WithMetaframe>\n      <App />\n    </WithMetaframe>\n  </ChakraProvider>,\n  document.getElementById(\"root\")!\n);\n"],"names":["jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","Plotly","metaframeObject","useMetaframe","data","setData","useState","config","setConfig","layout","setLayout","metaframe","log","onInputs","newinputs","setOutputs","event","id","name","time","performance","now","disposer","_jsx","width","height","autosize","responsive","ButtonHelp","url","open","setOpen","isIframe","window","location","origin","pathname","onClick","useCallback","_jsxs","HelpPanel","isOpen","onClose","onOverlayClick","iframeUrl","DrawerOverlay","DrawerCloseButton","DrawerBody","Route","App","Home","render","WithMetaframe","document","getElementById"],"mappings":"oKAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,ICzCf,KAAM,GAAMA,EACN,EAAOC,EACP,EAAWC,ECGXC,EAA8B,IAAM,MAGzCC,GAAkBC,IAClB,CAACC,EAAMC,GAAWC,EAAgB,IAClC,CAACC,EAAQC,GAAaF,EAAc,IACpC,CAACG,EAAQC,GAAaJ,EAAc,aAEhC,IAAM,CACVJ,EAAgBS,mBACVC,IAAI,yBAEb,CAACV,EAAgBS,cAGV,IAAM,IACV,CAACT,GAAiBS,sBAGhBA,GAAYT,EAAgBS,UAC5BE,EAAW,AAACC,GAAuC,GAG7CC,WAAW,CACnBC,MAAO,CAAEC,GAAIH,EAAUG,GAAIC,KAAM,SAAUC,KAAMC,YAAYC,WAEvDP,EAAUV,MAAQ,QAChBU,EAAUP,QAAU,QACpBO,EAAUL,QAAU,OAE1Ba,EAAWX,EAAUE,SAASA,SAE7B,IAAM,OAIZ,CAACX,EAAgBS,UAAWN,EAASG,EAAWE,IAGjDa,EAAC,GACC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChC,OACA,OAAQ,CAAOC,SAAU,MAAWjB,GACpC,OAAQ,CAAOkB,WAAY,MAAWpB,GACtC,iBAAkB,MCrCXqB,EAAoD,CAAC,CAAEC,SAAU,MACtE,CAACC,EAAMC,GAAWzB,EAAkB0B,QAEpCH,GAED,GAAEI,OAAOC,SAASC,SAASF,OAAOC,SAASE,0BAE1CC,GAAUC,EAAY,IAAM,GACxB,CAACR,IACR,CAACA,UAGFS,gBACEhB,EAAC,GACC,cAAc,mBACH,OAEX,KAAMA,EAAC,MACP,KAAK,KACL,UACA,GAAG,MAELA,EAAC,GAAU,MAAU,OAAQO,EAAM,gBAKnCU,EAID,CAAC,CAAEC,SAAQV,UAASF,SAAU,MAC3Ba,GAAUJ,EAAY,IAAM,GACxB,CAACG,IACR,CAACV,EAASU,IAEPE,EAAiBL,EAAY,IAAM,GAC/B,KACP,CAACP,IAEEa,EAAa,wDAAuDf,UAGxEN,GAAC,GACC,KAAK,OACL,UAAU,MACV,UACA,SACA,0BAEAA,EAACsB,YACCN,EAAC,aACChB,EAACuB,GAAkB,KAAK,KAAK,GAAG,aAChCvB,EAACwB,YACCxB,YAAQ,MAAM,OAAO,OAAO,OAAO,IAAKqB,cC9DvCI,EAA6B,IACxCT,eACGP,IAAa,KAAOT,EAAC,MACtBA,EAAC,SCLQ0B,EAA2B,IAC/B1B,EAAC2B,MCCVC,EACE5B,EAAC,YACCA,EAAC6B,YACC7B,EAAC,UAGL8B,SAASC,eAAe"}